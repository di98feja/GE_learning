# MIT License
#
# Copyright (c) 2021-2022 Reik Steinert
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

prices_entsoe:
  sensor:
    - platform: template
      sensors:
        electricity_price_buy:
          friendly_name: "Electricity Price Buy"
          icon_template: mdi:cash-minus
          unit_of_measurement: "SEK/kWh"
          value_template: >-
            {{(states('sensor.current_electricity_market_price') | float('unavailable') * states('sensor.exchange_rate') | float(0) * (1 + states('input_number.vat') | float(0) / 100) + states('input_number.kwh_extra_import') | float(0)) | round(3)}}
          attribute_templates:
            max: >
              {{(states('sensor.highest_energy_price_today') | float('unavailable') * states('sensor.exchange_rate') | float(0) * (1 + states('input_number.vat') | float(0) / 100) + states('input_number.kwh_extra_import') | float(0)) | round(3)}}
            average: >
              {{(states('sensor.average_electricity_price_today') | float('unavailable') * states('sensor.exchange_rate') | float(0) * (1 + states('input_number.vat') | float(0) / 100) + states('input_number.kwh_extra_import') | float(0)) | round(3)}}
            min: >
              {{(states('sensor.lowest_energy_price_today') | float('unavailable') * states('sensor.exchange_rate') | float(0) * (1 + states('input_number.vat') | float(0) / 100) + states('input_number.kwh_extra_import') | float(0)) | round(3)}}
            times_today: >
              {% set date = now().strftime("%Y-%m-%d") %}
              {{ date + ' 00:00:00',
                 date + ' 01:00:00',
                 date + ' 02:00:00',
                 date + ' 03:00:00',
                 date + ' 04:00:00',
                 date + ' 05:00:00',
                 date + ' 06:00:00',
                 date + ' 07:00:00',
                 date + ' 08:00:00',
                 date + ' 09:00:00',
                 date + ' 10:00:00',
                 date + ' 11:00:00',
                 date + ' 12:00:00',
                 date + ' 13:00:00',
                 date + ' 14:00:00',
                 date + ' 15:00:00',
                 date + ' 16:00:00',
                 date + ' 17:00:00',
                 date + ' 18:00:00',
                 date + ' 19:00:00',
                 date + ' 20:00:00',
                 date + ' 21:00:00',
                 date + ' 22:00:00',
                 date + ' 23:00:00' }}
            prices_today: >
              {% set exchange = states('sensor.exchange_rate') | float(0) %}
              {% set vat = 1 + states('input_number.vat') | float(0) / 100 %}
              {% set extra = states('input_number.kwh_extra_import') | float(0) %}
              {% set values = [ 
                 (state_attr('sensor.average_electricity_price_today','prices_today')[0].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[1].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[2].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[3].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[4].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[5].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[6].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[7].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[8].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[9].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[10].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[11].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[12].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[13].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[14].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[15].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[16].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[17].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[18].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[19].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[20].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[21].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[22].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[23].price | float('unavailable') * exchange * vat + extra) | round(3)
                ] %}
              {{values}}
            times_tomorrow: >
              {% set date = (now() + timedelta(days=1)).strftime("%Y-%m-%d") %}
              {{ date + ' 00:00:00',
                 date + ' 01:00:00',
                 date + ' 02:00:00',
                 date + ' 03:00:00',
                 date + ' 04:00:00',
                 date + ' 05:00:00',
                 date + ' 06:00:00',
                 date + ' 07:00:00',
                 date + ' 08:00:00',
                 date + ' 09:00:00',
                 date + ' 10:00:00',
                 date + ' 11:00:00',
                 date + ' 12:00:00',
                 date + ' 13:00:00',
                 date + ' 14:00:00',
                 date + ' 15:00:00',
                 date + ' 16:00:00',
                 date + ' 17:00:00',
                 date + ' 18:00:00',
                 date + ' 19:00:00',
                 date + ' 20:00:00',
                 date + ' 21:00:00',
                 date + ' 22:00:00',
                 date + ' 23:00:00' }}
            prices_tomorrow: >
              {% set exchange = states('sensor.exchange_rate') | float(0) %}
              {% set vat = 1 + states('input_number.vat') | float(0) / 100 %}
              {% set extra = states('input_number.kwh_extra_import') | float(0) %}
              {% set values = [ 
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[0].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[1].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[2].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[3].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[4].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[5].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[6].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[7].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[8].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[9].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[10].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[11].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[12].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[13].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[14].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[15].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[16].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[17].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[18].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[19].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[20].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[21].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[22].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[23].price | float('unavailable') * exchange * vat + extra) | round(3)
                ] %}
              {{values}}
            prices_all: >
              {% set exchange = states('sensor.exchange_rate') | float(0) %}
              {% set vat = 1 + states('input_number.vat') | float(0) / 100 %}
              {% set extra = states('input_number.kwh_extra_import') | float(0) %}
              {% set values = [ 
                 (state_attr('sensor.average_electricity_price_today','prices_today')[0].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[1].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[2].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[3].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[4].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[5].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[6].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[7].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[8].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[9].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[10].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[11].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[12].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[13].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[14].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[15].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[16].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[17].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[18].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[19].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[20].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[21].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[22].price | float('unavailable') * exchange * vat + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[23].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[0].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[1].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[2].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[3].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[4].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[5].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[6].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[7].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[8].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[9].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[10].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[11].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[12].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[13].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[14].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[15].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[16].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[17].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[18].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[19].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[20].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[21].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[22].price | float('unavailable') * exchange * vat + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[23].price | float('unavailable') * exchange * vat + extra) | round(3)
                ] %}
              {{values}}

        #-----------------------------------------------------------------------------------------------------------------------------------

        electricity_price_sell:
          friendly_name: "Electricity Price Sell"
          icon_template: mdi:cash-plus
          unit_of_measurement: "SEK/kWh"
          value_template: >
            {{(states('sensor.current_electricity_market_price') | float('unavailable') * states('sensor.exchange_rate') | float(0) + states('input_number.kwh_extra_export') | float(0)) | round(3)}}
          attribute_templates:
            max: >
              {{(states('sensor.highest_energy_price_today') | float('unavailable') * states('sensor.exchange_rate') | float(0) + states('input_number.kwh_extra_export') | float(0)) | round(3)}}
            average: >
              {{(states('sensor.average_electricity_price_today') | float('unavailable') * states('sensor.exchange_rate') | float(0) + states('input_number.kwh_extra_export') | float(0)) | round(3)}}
            min: >
              {{(states('sensor.lowest_energy_price_today') | float('unavailable') * states('sensor.exchange_rate') | float(0) + states('input_number.kwh_extra_export') | float(0)) | round(3)}}
            times_today: >
              {% set date = now().strftime("%Y-%m-%d") %}
              {{ date + ' 00:00:00',
                 date + ' 01:00:00',
                 date + ' 02:00:00',
                 date + ' 03:00:00',
                 date + ' 04:00:00',
                 date + ' 05:00:00',
                 date + ' 06:00:00',
                 date + ' 07:00:00',
                 date + ' 08:00:00',
                 date + ' 09:00:00',
                 date + ' 10:00:00',
                 date + ' 11:00:00',
                 date + ' 12:00:00',
                 date + ' 13:00:00',
                 date + ' 14:00:00',
                 date + ' 15:00:00',
                 date + ' 16:00:00',
                 date + ' 17:00:00',
                 date + ' 18:00:00',
                 date + ' 19:00:00',
                 date + ' 20:00:00',
                 date + ' 21:00:00',
                 date + ' 22:00:00',
                 date + ' 23:00:00' }}
            prices_today: >
              {% set exchange = states('sensor.exchange_rate') | float(0) %}
              {% set extra = states('input_number.kwh_extra_export') | float(0) %}
              {% set values = [ 
                 (state_attr('sensor.average_electricity_price_today','prices_today')[0].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[1].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[2].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[3].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[4].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[5].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[6].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[7].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[8].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[9].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[10].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[11].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[12].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[13].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[14].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[15].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[16].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[17].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[18].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[19].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[20].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[21].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[22].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[23].price | float('unavailable') * exchange + extra) | round(3)
                 ] %}
              {{values}}
            times_tomorrow: >
              {% set date = (now() + timedelta(days=1)).strftime("%Y-%m-%d") %}
              {{ date + ' 00:00:00',
                 date + ' 01:00:00',
                 date + ' 02:00:00',
                 date + ' 03:00:00',
                 date + ' 04:00:00',
                 date + ' 05:00:00',
                 date + ' 06:00:00',
                 date + ' 07:00:00',
                 date + ' 08:00:00',
                 date + ' 09:00:00',
                 date + ' 10:00:00',
                 date + ' 11:00:00',
                 date + ' 12:00:00',
                 date + ' 13:00:00',
                 date + ' 14:00:00',
                 date + ' 15:00:00',
                 date + ' 16:00:00',
                 date + ' 17:00:00',
                 date + ' 18:00:00',
                 date + ' 19:00:00',
                 date + ' 20:00:00',
                 date + ' 21:00:00',
                 date + ' 22:00:00',
                 date + ' 23:00:00' }}
            prices_tomorrow: >
              {% set exchange = states('sensor.exchange_rate') | float(0) %}
              {% set extra = states('input_number.kwh_extra_export') | float(0) %}
              {% set values = [ 
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[0].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[1].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[2].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[3].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[4].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[5].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[6].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[7].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[8].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[9].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[10].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[11].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[12].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[13].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[14].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[15].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[16].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[17].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[18].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[19].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[20].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[21].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[22].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[23].price | float('unavailable') * exchange + extra) | round(3)
                ] %}
              {{values}}
            prices_all: >
              {% set exchange = states('sensor.exchange_rate') | float(0) %}
              {% set extra = states('input_number.kwh_extra_export') | float(0) %}
              {% set values = [ 
                 (state_attr('sensor.average_electricity_price_today','prices_today')[0].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[1].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[2].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[3].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[4].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[5].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[6].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[7].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[8].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[9].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[10].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[11].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[12].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[13].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[14].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[15].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[16].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[17].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[18].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[19].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[20].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[21].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[22].price | float('unavailable') * exchange + extra) | round(3),
                 (state_attr('sensor.average_electricity_price_today','prices_today')[23].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[0].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[1].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[2].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[3].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[4].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[5].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[6].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[7].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[8].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[9].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[10].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[11].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[12].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[13].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[14].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[15].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[16].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[17].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[18].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[19].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[20].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[21].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[22].price | float('unavailable') * exchange + extra) | round(3),
                 'unavailable' if state_attr('sensor.average_electricity_price_today','prices_tomorrow') == [] else (state_attr('sensor.average_electricity_price_today','prices_tomorrow')[23].price | float('unavailable') * exchange + extra) | round(3)
                ] %}
              {{values}}

        #-----------------------------------------------------------------------------------------------------------------------------------

        exchange_rate:
          friendly_name: "Exchange Rate"
          icon_template: mdi:cash
          value_template: >
            {{ (states('sensor.open_exchange_rates_usd_sek') | float(0) / states('sensor.open_exchange_rates_usd_eur') | float(0)) | round(4) }}
          unit_of_measurement: "SEK/EUR"
