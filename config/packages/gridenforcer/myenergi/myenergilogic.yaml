# MIT License
#
# Copyright (c) 2021-2022 Reik Steinert
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

myenergi_myenergilogic:
  binary_sensor:
    - platform: template
      sensors:
        zappi_fast:
          friendly_name: "Zappi Fast"
          value_template: >
            {{ states('sensor.solax1_inverter_state') != 'EPS'
                and states('binary_sensor.flower_fcr_d_up') == 'off'
                and states('input_boolean.ev_charge_forced') == 'on'
                and states('input_boolean.sensor.charge_battery_sun') != 'on'
                    or (states('input_boolean.ev_charge_low_price') == 'on'
                        and states('sensor.electricity_price_buy') | float(0) != 'Unknown'
                        and states('binary_sensor.charge_price') == 'on'
                        and ((states('sensor.hourly_energy') | float(0) <= (states('input_number.allowed_hourly_off_peak_energy') | float(0))
                              and states('sensor.power_tariff_status') == 'Off Peak')
                              or (states('sensor.hourly_energy') | float(0) <= states('input_number.allowed_hourly_peak_energy') | float(0)
                                and states('sensor.power_tariff_status') == 'Peak'))) 
                    or ((states('sensor.hourly_energy') | float(0) <= (states('input_number.allowed_hourly_off_peak_energy') | float(0))
                        and states('sensor.power_tariff_status') == 'Off Peak')
                        and states('input_boolean.ev_allways_night_charge') == 'on') 
            }}

        zappi_eco_plus:
          friendly_name: "Zappi Eco+"
          value_template: >
            {{ states('binary_sensor.charge_battery_sun') == 'on' and
               states('input_boolean.ev_charge_forced') != 'on' }}

        zappi_stop:
          friendly_name: "Zappi Stop"
          value_template: >
            {{ states('binary_sensor.zappi_fast') == 'off' and states('binary_sensor.charge_battery_sun') == 'off' }}

  #***************************************************************************************************

  input_boolean:
    ev_charge_low_price:
      name: EV Charge Low Price
      icon: mdi:ev-station

    ev_charge_forced:
      name: EV Charge Forced
      icon: mdi:electron-framework
